<?php


/**
 * Rijkshuisstijl (Digitale Overheid) - page_search.php
 * ----------------------------------------------------------------------------------
 * Zoekresultaatpagina
 * ----------------------------------------------------------------------------------
 * @author  Paul van Buuren
 * @license GPL-2.0+
 * @package wp-rijkshuisstijl
 * @version 0.7.2
 * @desc.   Search functions - paging
 * @link    https://github.com/ICTU/digitale-overheid-wordpress-theme-rijkshuisstijl
 */

//* Template Name: 30 - Speciale zoekpagina 


// add description
add_action( 'genesis_before_loop', 'rhswp_add_search_description', 15 );



/** Replace the standard loop with our custom loop */
remove_action( 'genesis_loop', 'genesis_do_loop' );
add_action( 'genesis_loop', 'rhswp_archive_custom_search_loop' );



genesis();

function rhswp_add_search_description() {

$search_text = get_search_query() ? apply_filters( 'the_search_query', get_search_query() ) : apply_filters( 'genesis_search_text', __( 'Search this website', 'genesis' ) . ' &#x02026;' );
  
  echo '<h1>Zoekresultaten voor "' . $search_text . '"</h1>';
  echo '<h1>PAGE_SEARCH.PHP / Zoekresultaten voor "' . $search_text . '"</h1>';
  
  get_search_form();
  
}


/** Code for custom loop */
function rhswp_archive_custom_search_loop() {
  // code for a completely custom loop
  global $post;

  global $post;
  $query  = isset( $_GET['searchwpquery'] ) ? sanitize_text_field( $_GET['searchwpquery'] ) : '';
  $page   = isset( $_GET['swppage'] ) ? absint( $_GET['swppage'] ) : 1;
  the_post();


?>  

        <form action="" method="get">
          <fieldset>
            <legend>Supplemental Search</legend>
            <p>
              <label for="searchwpquery">Search</label>
              <input type="text" id="searchwpquery" name="searchwpquery" value="<?php echo esc_attr( $query ); ?>" />
            </p>
            <p><button type="submit">Search</button></p>
          </fieldset>
        </form>

<?php
  
  if( !empty( $query ) ) :
    $engine                 = SearchWP::instance();     // instatiate SearchWP
    $supplementalEngineName = 'supplemental'; 	        // search engine name
    // perform the search
    $posts = $engine->search( $supplementalEngineName, $query, $page );

    if( !empty( $posts ) ) : 
      
      echo '<div class="block">';
    
      foreach( $posts as $post ) : 

        $permalink    = get_permalink();
        $excerpt      = wp_strip_all_tags( get_the_excerpt( $post ) );
        $postdate     = get_the_date( );
        $doimage      = false;
        $classattr    = genesis_attr( 'entry' );
        $classattr    = str_replace( 'has-post-thumbnail', '', $classattr );
        $contenttype  = get_post_type();
        $theurl       = get_permalink();
        $thetitle     = get_the_title();
        $documenttype = rhswp_translateposttypes( $contenttype );
        
        if ( 'attachment' == $contenttype ) {
          
          $theurl       = wp_get_attachment_url( $post->ID );
          $parent_id    = $post->post_parent;
          $excerpt      = wp_strip_all_tags( get_the_excerpt( $parent_id ) );


          $mimetype     = get_post_mime_type( $post->ID ); 
          $thetitle     = get_the_title( $parent_id );

          $filesize     = filesize( get_attached_file( $post->ID ) );
          
          if ( $mimetype ) {
            $typeclass = explode('/', $mimetype);

            $classattr = str_replace( 'class="', 'class="attachment ' . $typeclass[1] . ' ', $classattr );

            if ( $filesize ) {
              $documenttype = rhswp_translatemimetypes( $mimetype ) . ' (' . human_filesize($filesize) . ')';
            }
            else {
              $documenttype = rhswp_translatemimetypes( $mimetype );
            }

          }
        }
      
      
        if( $post instanceof SearchWPTermResult ) :

          $classattr = str_replace( 'class="', 'class="taxonomy ' . $post->term->taxonomy . ' ', $classattr );

          $theurl       = $post->link;
          $thetitle     = $post->name;
          $excerpt      = $post->description;
          $documenttype = $post->taxonomy;
        
        else : setup_postdata( $post ); 

          if ( 'post' == $contenttype ) {
            $documenttype .= '<span class="post-date">' . get_the_date() . '</span>';          
          }

        endif; 

        printf( '<article %s>', $classattr );
        printf( '<a href="%s"><h3>%s</h3><p>%s</p><p class="meta">%s</p></a>', $theurl, $thetitle, $excerpt, $documenttype );
        echo '</article>';


          
      endforeach; 

      echo '</div>';

    endif; 

  endif; 
      
  
  if ( have_posts() ) {
  
    echo '<div class="block">';
    
    $postcounter = 0;
  
    while (have_posts()) : the_post();
      $postcounter++;
  
      $permalink    = get_permalink();
      $excerpt      = wp_strip_all_tags( get_the_excerpt( $post ) );
      $postdate     = get_the_date( );
      $doimage      = false;
      $classattr    = genesis_attr( 'entry' );
      $contenttype  = get_post_type();

      if ( $postcounter < 3 && has_post_thumbnail( $post->ID ) ) {
        $doimage    = true;
      } 
      else {
        $classattr = str_replace( 'has-post-thumbnail', '', $classattr );
      }
  

      if ( is_search() ) {

        $theurl       = get_permalink();
        $thetitle     = get_the_title();
        $documenttype = rhswp_translateposttypes( $contenttype );
        
        if ( 'post' == $contenttype ) {
          
          $documenttype .= '<span class="post-date">' . get_the_date() . '</span>';          
        }
        if ( 'attachment' == $contenttype ) {
          
          $theurl       = wp_get_attachment_url( $post->ID );
          $parent_id    = $post->post_parent;
          $excerpt      = wp_strip_all_tags( get_the_excerpt( $parent_id ) );


          $mimetype     = get_post_mime_type( $post->ID ); 
          $thetitle     = get_the_title( $parent_id );

          $filesize     = filesize( get_attached_file( $post->ID ) );
          
          if ( $mimetype ) {
            $typeclass = explode('/', $mimetype);

            $classattr = str_replace( 'class="', 'class="attachment ' . $typeclass[1] . ' ', $classattr );

            if ( $filesize ) {
              $documenttype = rhswp_translatemimetypes( $mimetype ) . ' (' . human_filesize($filesize) . ')';
            }
            else {
              $documenttype = rhswp_translatemimetypes( $mimetype );
            }

          }
        }

        printf( '<article %s>', $classattr );
        printf( '<a href="%s"><h3>%s</h3><p>%s</p><p class="meta">%s</p></a>', $theurl, $thetitle, $excerpt, $documenttype );


      } 

      echo '</article>';
      do_action( 'genesis_after_entry' );
  
    endwhile;
  
    echo '</div>';

        genesis_posts_nav();

        wp_reset_query();        
  
  }
}



function rhswp_archive_custom_search_loop2() {

   ?>


        <form action="" method="get">
          <fieldset>
            <legend>Supplemental Search</legend>
            <p>
              <label for="searchwpquery">Search</label>
              <input type="text" id="searchwpquery" name="searchwpquery" value="<?php echo esc_attr( $query ); ?>" />
            </p>
            <p><button type="submit">Search</button></p>
          </fieldset>
        </form>

      <?php if( !empty( $query ) ) : ?>

        <?php
          $engine = SearchWP::instance();             // instatiate SearchWP
          $supplementalEngineName = 'supplemental'; 	// search engine name
          // perform the search
          $posts = $engine->search( $supplementalEngineName, $query, $page );
        ?>

        <?php if( !empty( $posts ) ) : ?>
          <?php foreach( $posts as $post ) : ?>
            <?php if( $post instanceof SearchWPTermResult ) : ?>
              <article>
                <header class="entry-header">
                  <h1 class="entry-title">
                    <a href="<?php echo $post->link; ?>" rel="bookmark"><?php echo $post->taxonomy; ?>: <?php echo $post->name; ?></a>
                  </h1>
                </header><!-- .entry-header -->
                <div class="entry-summary">
                  <p><?php echo $post->description; ?></p>
                </div><!-- .entry-summary -->
              </article>
            <?php else : setup_postdata( $post ); ?>
              <article>
                <header class="entry-header">
                  <h1 class="entry-title">
                    <a href="<?php the_permalink() ?>" rel="bookmark"><?php the_title(); ?></a>
                  </h1>
                </header><!-- .entry-header -->
                <div class="entry-summary">
                  <?php the_excerpt(); ?>
                </div><!-- .entry-summary -->
              </article>
            <?php endif; ?>
          <?php endforeach; ?>
        <?php endif; ?>

      <?php endif; ?>

    </div><!-- #content -->
  </div><!-- #primary -->

<?php
  wp_reset_postdata();

}
